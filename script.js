document.addEventListener("DOMContentLoaded", () => {
  const menuToggle = document.getElementById("menuToggle");
  const menuClose = document.getElementById("menuClose");
  const sideMenu = document.getElementById("sideMenu");
  const overlay = document.getElementById("overlay");
  const catalogSection = document.getElementById("catalogSection");
  const mainListTitle = document.getElementById("mainListTitle");
  const gamesList = document.getElementById("gamesList");

  const menuItems = document.querySelectorAll(".menuItem");

  // –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
  let gamesData = [];
  let appsData = [];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ JSON
  async function loadJSON(url) {
    try {
      const response = await fetch(url);
      if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ " + url);
      return await response.json();
    } catch (e) {
      console.error(e);
      return [];
    }
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤
  async function loadData() {
    gamesData = await loadJSON("games.json");
    appsData = await loadJSON("apps.json");
  }

  // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é
  function closeMenu() {
    sideMenu.classList.remove("open");
    overlay.classList.remove("active");
    overlay.classList.add("hidden");
  }

  menuToggle.addEventListener("click", () => {
    sideMenu.classList.add("open");
    overlay.classList.add("active");
    overlay.classList.remove("hidden");
  });

  menuClose.addEventListener("click", closeMenu);
  overlay.addEventListener("click", closeMenu);

  // –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞
  function renderList(title, items) {
    mainListTitle.textContent = title;
    gamesList.innerHTML = "";

    if (items.length === 0) {
      gamesList.innerHTML = "<p>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.</p>";
      return;
    }

    items.forEach(item => {
      const container = document.createElement("div");
      container.className = "flex items-center gap-4 bg-purple-900 bg-opacity-30 p-3 rounded cursor-pointer hover:bg-purple-700";

      const img = document.createElement("img");
      img.src = item.icon;
      img.alt = item.name;
      img.className = "w-12 h-12 rounded-xl flex-shrink-0";
      container.appendChild(img);

      const textWrapper = document.createElement("div");
      textWrapper.className = "flex-grow";

      const h3 = document.createElement("h3");
      h3.className = "font-semibold text-lg";
      h3.textContent = item.name;
      textWrapper.appendChild(h3);

      if (item.description) {
        const desc = document.createElement("p");
        desc.className = "text-sm text-gray-300";
        desc.textContent = item.description;
        textWrapper.appendChild(desc);
      }

      container.appendChild(textWrapper);

      // –ö–Ω–æ–ø–∫–∞ –°–∫–∞—á–∞—Ç—å, –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞
      if (item.download && item.download !== "#") {
        const downloadLink = document.createElement("a");
        downloadLink.href = item.download;
        downloadLink.target = "_blank";
        downloadLink.textContent = "–°–∫–∞—á–∞—Ç—å";
        downloadLink.className = "ml-auto px-3 py-1 bg-purple-600 rounded hover:bg-purple-800 text-sm";
        container.appendChild(downloadLink);
      }

      gamesList.appendChild(container);
    });

    catalogSection.scrollIntoView({ behavior: "smooth" });
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –º–µ–Ω—é
  menuItems.forEach(button => {
    button.addEventListener("click", async () => {
      const catalogType = button.getAttribute("data-catalog");
      closeMenu();

      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∑–∏–º
      if (gamesData.length === 0 || appsData.length === 0) {
        document.getElementById("loader").style.display = "flex";
        await loadData();
        document.getElementById("loader").style.display = "none";
      }

      if (catalogType === "games") {
        renderList("üéÆ –í—Å–µ –∏–≥—Ä—ã", gamesData);
      } else if (catalogType === "apps") {
        renderList("üì± –í—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", appsData);
      }
    });
  });
});
